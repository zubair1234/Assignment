Preparation:
***********************************************************************************************************************
The project is to implement multicast services in software defined network, independent of any Internet-based protocols.
All of the codes is running on the SDN controller (RYU), and the topology of substrate network generated by Mininet
is the IP backbone network (as shown in the Graphs/topology.png).Furthermore, each switch is mounted with two hosts that are
not shown in the figure due to the RYU GUI tools.

Functions of files:
***********************************************************************************************************************
The files "Ports_input, Request_in and Topology_in" are the inputs of our project, which are sent from the remote management platform.

The file "topo_input.py" encapsulates all the operations in the three inputs: Ports, Request and Topology.

The file "stp.py" calculates single-source shortest path tree, and records all the paths.

The files "spanning.py and multicast.py" are to construct multicast trees with  the KMB algorithm whose performance
ratio is less than 2.

The file "Generaterouting.py" maps the outputs of KMB algorithm into the substrate network.

The file "Multicast.py" organizes the whole procedure, and transfer its outputs to the controller.

The file "Controllerinterface1.py" guarantee the multicast flows to go through the predefined multicast paths.

Results:
***********************************************************************************************************************
We process a multicast request where h4 is the sender and {h1, h6, h7, h13, h20} is the receiver set. The result is
 shown in file "Graphs/results.png". It can be seen that our multicast is based on a common IP address
